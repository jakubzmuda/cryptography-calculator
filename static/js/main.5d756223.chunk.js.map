{"version":3,"sources":["App.js","index.js"],"names":["App","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","a","b","_this2","react_default","createElement","className","onChange","event","setState","target","value","renderTable","_this3","rows","calculateRows","allLegit","map","row","renderRow","key","i","u","uPrim","v","vPrim","q","r","Number","isNaN","firstInteger","secondInteger","Math","max","min","floor","_","last","previousRow","newA","newB","nextRow","push","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5d756223.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport _ from 'lodash'\n\nclass App extends Component {\n\n\n  constructor (props, context) {\n    super(props, context);\n    this.state = {\n      a: '3',\n      b: '2'\n    }\n  }\n\n  render () {\n    return (\n      <div className={'container'}>\n        <div className=\"app\">\n          <h1>Extended Euclid algorithm</h1>\n          <div className={'inputs'}>\n            <label>first integer</label>\n            <input className={'input'} onChange={event => this.setState({ a: event.target.value })} value={this.state.a} />\n            <label>second integer</label>\n            <input className={'input'} onChange={event => this.setState({ b: event.target.value })} value={this.state.b} />\n          </div>\n          {this.renderTable()}\n        </div>\n      </div>\n    );\n  }\n\n  renderTable () {\n    const rows = this.calculateRows();\n\n    if (!this.allLegit()) {\n      return <label className={'validation-error'}>bad arguments</label>\n    }\n\n    return (\n      <table>\n        <thead>\n        <tr>\n          <th>i</th>\n          <th>ui</th>\n          <th>ui`</th>\n          <th>vi</th>\n          <th>vi`</th>\n          <th>ai</th>\n          <th>bi</th>\n          <th>q</th>\n          <th>r</th>\n        </tr>\n        </thead>\n        <tbody>\n        {rows.map(row => this.renderRow(row))}\n        </tbody>\n      </table>\n    )\n  }\n\n  renderRow (row) {\n    return (\n      <tr key={row.i}>\n        <td>{row.i}</td>\n        <td>{row.u}</td>\n        <td>{row.uPrim}</td>\n        <td>{row.v}</td>\n        <td>{row.vPrim}</td>\n        <td>{row.a}</td>\n        <td>{row.b}</td>\n        <td>{row.q}</td>\n        <td>{row.r}</td>\n      </tr>\n    );\n  }\n\n  allLegit () {\n    const a = Number(this.state.a);\n    const b = Number(this.state.b);\n\n    return (!isNaN(a) && !isNaN(b)) && (a > 0 && b > 0)\n  }\n\n  calculateRows () {\n    const firstInteger = Number(this.state.a);\n    const secondInteger = Number(this.state.b);\n\n    const a = Math.max(firstInteger, secondInteger);\n    const b = Math.min(firstInteger, secondInteger);\n\n    const firstRow = {\n      i: 0,\n      a: a,\n      b: b,\n      q: Math.floor(a / b),\n      r: a % b,\n      v: 1,\n      vPrim: 0,\n      u: 0,\n      uPrim: 1\n    };\n\n    const rows = [firstRow];\n\n    while (_.last(rows).r > 0) {\n      const previousRow = _.last(rows);\n\n\n      const newA = previousRow.b;\n      const newB = previousRow.r;\n      const nextRow = {\n        i: previousRow.i + 1,\n        a: newA,\n        b: newB,\n        q: Math.floor(newA / newB),\n        r: newA % newB,\n        v: previousRow.vPrim - (previousRow.q * previousRow.v),\n        vPrim: previousRow.v,\n        u: previousRow.uPrim - (previousRow.q * previousRow.u),\n        uPrim: previousRow.u\n      };\n\n      rows.push(nextRow);\n    }\n\n    return rows;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}